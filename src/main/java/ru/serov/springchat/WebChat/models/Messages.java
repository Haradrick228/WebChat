package ru.serov.springchat.WebChat.models;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import org.hibernate.annotations.CurrentTimestamp;


import java.io.Serializable;
import java.security.Timestamp;
import java.util.Date;

@Entity
@Table(name = "messages")
public class Messages implements Serializable {

    //    CREATE TABLE messages(
//            message_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- Порядковый id сообщений --);
//    chat_id INT NOT NULL, -- id чата --
//    user_id INT NOT NULL, -- id пользователя, который добавил сообщение --,
//    context VARCHAR(200) NOT NULL, -- Текст сообщения --
//    date_create TIMESTAMP NOT NULL, -- Дата сообщения --
//    PRIMARY KEY (message_id),
//    FOREIGN KEY (chat_id) REFERENCES chat(chat_id),
//    FOREIGN KEY (user_id) REFERENCES users(user_id)
//            );

    @Id
    @Column(name = "message_id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int message_id;

    @ManyToOne
    @JoinColumn(name = "chat_id")
    private Chat chat;

    @ManyToOne
    @JoinColumn(name = "user_id")
    private User user;

    @Column(name = "context")
    @NotBlank
    @Size(max = 200, message = "Message must less then 200 character")
    private String context;

    @Column(name = "date_create")
    @NotNull
    @Temporal(TemporalType.TIMESTAMP)
    private Date data_create;

    public Messages() {
    }

    public Messages(Chat chat, User user, String context) {
        this.chat = chat;
        this.user = user;
        this.context = context;
    }

    public int getMessage_id() {
        return message_id;
    }

    public void setMessage_id(int message_id) {
        this.message_id = message_id;
    }

    public Chat getChat() {
        return chat;
    }

    public void setChat(Chat chat) {
        this.chat = chat;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public String getContext() {
        return context;
    }

    public void setContext(String context) {
        System.out.println("Дина текста " + context.length());
        this.context = context;
    }

    public Date getData_create() {
        return data_create;
    }

    public void setData_create(Date data_create) {
        this.data_create = data_create;
    }
}
